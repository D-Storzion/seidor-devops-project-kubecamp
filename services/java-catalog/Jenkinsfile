pipeline{    
    agent any
    parameters {
        string(name: 'DOCKER_IMAGE_TAG', defaultValue: 'latest', description: 'Docker image tag')
        string(name: 'DOCKER_IMAGE_NAME', defaultValue: 'java-catalog', description: 'Docker image name')
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'sonarqube_5.0'
                    withSonarQubeEnv(installationName: 'aroldev sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=sergio-project-kubecamp-java -Dsonar.sources=./services/java-catalog -Dsonar.exclusions=**/*Test.java -Dsonar.tests=./services/java-catalog -Dsonar.test.inclusions=**/*Test.java -Dsonar.java.binaries=."
                    }
                }
            }
        }
        
        
        stage('Build Docker Image') {
            steps {
                dir('services/java-catalog'){
                    script{
                        def dockerImageTag = params.DOCKER_IMAGE_TAG
                        docker = docker.build("sergiolc1/java-catalog:${dockerImageTag}", '-f .docker/dockerfile .')
                    }
                }           
            }
        }
        
        stage('Push Docker Image'){
            steps {
                script {
                    withDockerRegistry(credentialsId: 'sergio.dockerhub'){
                        docker.push()
                    }
                }
            }
        }
        
    }
}